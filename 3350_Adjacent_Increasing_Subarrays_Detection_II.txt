class Solution {
public:
    bool hasIncreasingSubarrays(vector<int>& nums, int k) {
        int count = 0;
        for(int i = 1; i < nums.size() ; i++){
            if(count == k-1){
                return true;
            }
            if(i + k >= nums.size() || (i-1)+k >= nums.size()){
                return false;
            }/// para que no se saalga
            if(nums[i-1] < nums[i] && nums[(i-1)+k] < nums[i+k]){
                count ++;
            } else {
                count = 0;
            }
        }
        return false;
    }
    int maxIncreasingSubarrays(vector<int>& nums) {
        int n = nums.size();
        int left = 1, right = n - 1, ans = 0;

        while (left <= right) {
            int mid = left + (right - left) / 2;
            if (hasIncreasingSubarrays(nums, mid)) {
                ans = mid;
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }
        return ans;
    }
};